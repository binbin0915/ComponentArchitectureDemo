plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.wangkai.version'
    id 'kotlin-android'
    id'kotlin-kapt'
}

android {
    namespace 'com.wangkai.myapplication'
    compileSdk BuildConfig.compileSdk
    /*默认配置*/
    defaultConfig {
        applicationId "com.wangkai.myapplication"
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName
        testInstrumentationRunner BuildConfig.testInstrumentationRunner
        //统一资源前缀，规范资源引用
        resourcePrefix "app_"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    /*风味维度*/
    flavorDimensions "default"
    /*多渠道配置*/
    productFlavors {
        app {
            applicationId "com.wangkai.myapplication"
            versionName BuildConfig.versionName
            manifestPlaceholders = [app_name: "@string/app_name",]
        }
        app_2 {
            applicationId "com.wangkai.test2"
            versionName BuildConfig.versionName
            manifestPlaceholders = [app_name: "@string/app_name",]
        }
    }
    /*签名配置*/
    signingConfigs {
        app {
            storeFile file("./appkey_1.jks")
            storePassword '123456'
            keyAlias 'appkey_1'
            keyPassword '123456'
        }
        app_2 {
            storeFile file("./appkey_1.jks")
            storePassword '123456'
            keyAlias 'appkey_1'
            keyPassword '123456'
        }
    }
    /*构建类型*/
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            productFlavors.app.signingConfig signingConfigs.app
            productFlavors.app_2.signingConfig signingConfigs.app_2
        }
    }
    /*编译选项*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    viewBinding {
        enabled = true
    }
    /*kotlin选项*/
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //主题包
    implementation Google.material
    //公共基础包
    implementation project(":library:lib-common")
    implementation project(":library:lib-updata")

    //ACRA needs the following dependencies to use a custom report sender
    compileOnly("com.google.auto.service:auto-service-annotations:1.0.1")
    //or for kotlin sources (requires kapt gradle plugin):
    kapt("com.google.auto.service:auto-service:1.0.1")

    //用于设置主题
    implementation AndroidX.appcompat
    implementation project(path: ':library:lib-file')
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    if (!isRunModel.toBoolean()) {
        implementation project(":model:model-splash")
        implementation project(":model:model-home")
        implementation project(":model:model-login")
        implementation project(":model:model-kotlin")
        implementation project(":model:model-airpods")
        implementation project(":model:model-center")
    }
}